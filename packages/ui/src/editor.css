
pre {
  background: #0d0d0d;
  color: #fff;
  font-family: "JetBrainsMono", monospace;
  padding: 0.75rem 1rem;

  code {
    background: none;
    color: inherit;
    font-size: 0.8rem;
    padding: 0;
  }

  .hljs-comment,
  .hljs-quote {
    color: #616161;
  }

  .hljs-variable,
  .hljs-template-variable,
  .hljs-attribute,
  .hljs-tag,
  .hljs-name,
  .hljs-regexp,
  .hljs-link,
  .hljs-name,
  .hljs-selector-id,
  .hljs-selector-class {
    color: #f98181;
  }

  .hljs-number,
  .hljs-meta,
  .hljs-built_in,
  .hljs-builtin-name,
  .hljs-literal,
  .hljs-type,
  .hljs-params {
    color: #fbbc88;
  }

  .hljs-string,
  .hljs-symbol,
  .hljs-bullet {
    color: #b9f18d;
  }

  .hljs-title,
  .hljs-section {
    color: #faf594;
  }

  .hljs-keyword,
  .hljs-selector-tag {
    color: #70cff8;
  }

  .hljs-emphasis {
    font-style: italic;
  }

  .hljs-strong {
    font-weight: 700;
  }
}

/* Base editor styles */
.ProseMirror {
  @apply w-full text-sm leading-normal;
  height: 100%;
  min-height: 350px;
}

.ProseMirror:focus {
  @apply outline-none;
}


/* Typography */
.ProseMirror h1 {
  @apply text-xl font-semibold text-foreground;
}

.ProseMirror h2 {
  @apply text-lg font-semibold text-foreground;
}

.ProseMirror h3 {
  @apply text-base font-semibold text-foreground;
}

.ProseMirror h4 {
  @apply text-sm font-semibold text-foreground;
}

.ProseMirror p {
  @apply text-sm;
}

/* Lists */
.ProseMirror ul,
.ProseMirror ol {
  @apply my-1 ml-2 space-y-2;
}

.ProseMirror li {
  @apply text-sm leading-6;
  margin: 0 !important;
}

.ProseMirror li > p {
  @apply m-0;
}

/* Numbered lists specific styling */
.ProseMirror ol {
  list-style-type: decimal;
  counter-reset: item;
}

.ProseMirror ol li {
  display: block;
  position: relative;
}

.ProseMirror ol li::before {
  content: counters(item, ".") ".";
  counter-increment: item;
  position: absolute;
  left: -1.5em;
}

/* Spacing between sections */
.ProseMirror div[data-type="heading"] + p,
.ProseMirror h1 + p,
.ProseMirror h2 + p,
.ProseMirror h3 + p,
.ProseMirror h4 + p {
  @apply mt-1;
}

/* Code blocks */
.ProseMirror pre {
  @apply bg-muted p-4 my-4 overflow-x-auto;
}

.ProseMirror code {
  @apply font-mono text-sm;
}

/* Blockquotes */
.ProseMirror blockquote {
  @apply border-l-4 border-primary pl-4 italic my-4;
}

/* Task lists */
.ProseMirror ul[data-type="taskList"] {
  @apply list-none p-0;
}

.ProseMirror ul[data-type="taskList"] li {
  @apply flex items-start gap-2;
}

/* Placeholder */
.ProseMirror p.is-empty::before {
  @apply text-muted-foreground;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.ProseMirror table {
  @apply w-full border-collapse my-4 border border-border;
}

.ProseMirror th {
  @apply text-sm font-medium;
}